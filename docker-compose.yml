version: "3.8"

services:
  backend:
    build: 
      context: .
      dockerfile: backend/Dockerfile
      target: backend
    container_name: backend-container
    working_dir: /app/backend
    volumes:
      - ./backend:/app/backend
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      - db
      - redis
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload

  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
      target: frontend
    container_name: frontend-container
    working_dir: /app/frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app/frontend
      - frontend_node_modules:/app/frontend/node_modules
    env_file:
      - .env
    environment:
      - NODE_ENV=development
      - VITE_API_URL=http://localhost:8000/api/v1
    depends_on:
      - backend
    command: sh -c "npm install && npm run dev"

  db:
    image: postgres:15
    container_name: cinetrack_db_server
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: cinetrack
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    command: postgres -c max_connections=100
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7
    container_name: redis-container
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
  redis_data:
  frontend_node_modules: 